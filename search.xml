<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>归并排序求逆序对数</title>
    <url>/2020/03/10/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%E6%B1%82%E9%80%86%E5%BA%8F%E5%AF%B9%E6%95%B0/</url>
    <content><![CDATA[<h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><p>归并排序是不断运用分治的思想，不断的将数组二分。然后将两个数组的数进行依次比较，在比较过程中依次将较小的数放在另一个新的数组中，在这个过程中如果出现前边数组的数大于后边数组的数，即出现了逆序数，统计即可。当两个数组都遍历到最后时，新的数组中的数即为有序数，然后将这个有序数组重新赋予原数组，在进行下一个分治过程即可。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1000000</span>];</span><br><span class="line"><span class="keyword">int</span> t[<span class="number">1000000</span>];</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>,n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(l==r) <span class="keyword">return</span> ;</span><br><span class="line">	<span class="keyword">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">	merge(l,mid);</span><br><span class="line">	merge(mid+<span class="number">1</span>,r); </span><br><span class="line">	<span class="keyword">int</span> i=l,j=mid+<span class="number">1</span>,p=l;</span><br><span class="line">	<span class="keyword">while</span>(i&lt;=mid&amp;&amp;j&lt;=r) </span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i]&lt;a[j])</span><br><span class="line">		t[p++]=a[i++];</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			t[p++]=a[j++];</span><br><span class="line">			ans=ans+mid-i+<span class="number">1</span>;<span class="comment">//此时两边都是排好序了的，当前面的序列中有一个数大于后面的一个数时，前面序列中剩下的数都大于这个数，共mid-i+1个</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(i&lt;=mid)</span><br><span class="line">	&#123;</span><br><span class="line">		t[p++]=a[i++];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(j&lt;=r)</span><br><span class="line">	&#123;</span><br><span class="line">		t[p++]=a[j++];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;i++)</span><br><span class="line">	a[i]=t[i];<span class="comment">//把有序数组t复制给数组a变成有序的，保证合并上一层有序数列时满足条件</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">	&#125;</span><br><span class="line">	merge(<span class="number">1</span>,n);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>一些题</category>
      </categories>
  </entry>
  <entry>
    <title>2020HPU蓝桥杯省赛训练(一)</title>
    <url>/2020/03/09/2020HPU%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%81%E8%B5%9B%E8%AE%AD%E7%BB%83-%E4%B8%80/</url>
    <content><![CDATA[<p><strong>混份杯？根本混不上分好吧！！</strong></p>
<a id="more"></a>
<h1 id="A-算法提高-找素数"><a href="#A-算法提高-找素数" class="headerlink" title="A.算法提高 找素数"></a>A.算法提高 找素数</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>给定区间[L, R] ， 请计算区间中素数的个数。</p>
<h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>两个数L和R。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>一行，区间中素数的个数。</p>
<h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><p>2 11</p>
<h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><p>5</p>
<h2 id="数据规模和约定"><a href="#数据规模和约定" class="headerlink" title="数据规模和约定"></a>数据规模和约定</h2><p>2 &lt;= L &lt;= R &lt;= 2147483647 R-L &lt;= 1000000</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>由于本题的数据范围较大，用暴力素筛的方法肯定会超时。首先我们要了解一个知识点就是任意一个数X，都会有一个小于sqrt(X)的质因子。由此条性质，我们可以先求区间(1,sqrt(R))中的质数，然后依次对每个质数进行操作，可以求出(L,R)中的合数。最后将(L,R)之间的合数映射到(0,R-L)之间，防止超内存。</p>
<h2 id="AC-code"><a href="#AC-code" class="headerlink" title="AC code"></a>AC code</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll l,r;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1000000</span>];</span><br><span class="line">ll b[<span class="number">1000000</span>];</span><br><span class="line"><span class="keyword">int</span> c[<span class="number">1000000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;l&gt;&gt;r;</span><br><span class="line">	<span class="keyword">int</span> m=<span class="built_in">sqrt</span>(r);</span><br><span class="line">	<span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span> a);</span><br><span class="line">	<span class="built_in">memset</span>(c,<span class="number">0</span>,<span class="keyword">sizeof</span> c);</span><br><span class="line">	a[<span class="number">2</span>]=<span class="number">0</span>;a[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=m;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i]==<span class="number">0</span>) b[++cnt]=i;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>*i;j&lt;=m;j+=i)</span><br><span class="line">		&#123;</span><br><span class="line">			a[j]=<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="comment">//	for(int i=1;i&lt;=cnt;i++)</span></span><br><span class="line"><span class="comment">//	&#123;</span></span><br><span class="line"><span class="comment">//		printf("%d..",b[i]);</span></span><br><span class="line"><span class="comment">//	&#125;</span></span><br><span class="line">	<span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">	&#123;</span><br><span class="line">			<span class="keyword">for</span>(ll j=<span class="built_in">max</span>(b[i]*<span class="number">2</span>,l/b[i]*b[i]);j&lt;=r;j+=b[i])</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(j&gt;=l)</span><br><span class="line">				&#123;</span><br><span class="line">					c[j-l]=<span class="number">1</span>;</span><br><span class="line">					<span class="comment">//printf("%d..",j);				</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125; </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=r-l;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(c[i]==<span class="number">0</span>) ans++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="E-基础练习-十六进制转八进制"><a href="#E-基础练习-十六进制转八进制" class="headerlink" title="E 基础练习 十六进制转八进制"></a>E 基础练习 十六进制转八进制</h1><h2 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a><strong>问题描述</strong></h2><p>给定n个十六进制正整数，输出它们对应的八进制数。</p>
<h2 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a><strong>输入格式</strong></h2><p>输入的第一行为一个正整数n （1&lt;=n&lt;=10）。<br>接下来n行，每行一个由0~9、大写字母A~F组成的字符串，表示要转换的十六进制正整数，每个十六进制数长度不超过100000。</p>
<h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a><strong>输出格式</strong></h2><p>输出n行，每行为输入对应的八进制正整数。</p>
<h2 id="【注意】"><a href="#【注意】" class="headerlink" title="【注意】"></a>【注意】</h2><p>输入的十六进制数不会有前导0，比如012A。<br>输出的八进制数也不能有前导0。</p>
<h2 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a><strong>样例输入</strong></h2><p>2<br>39<br>123ABC</p>
<h2 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a><strong>样例输出</strong></h2><p>71<br>4435274</p>
<h2 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h2><p>先将16进制转换为2进制再转化为16进制。注意每一个数在不同进制中的映射关系。</p>
<h2 id="AC-code-1"><a href="#AC-code-1" class="headerlink" title="AC code"></a>AC code</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1000000</span>];</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">1000000</span>];</span><br><span class="line"><span class="keyword">int</span> c[<span class="number">1000000</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">	<span class="keyword">while</span>(n--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(s[i]&gt;=<span class="string">'0'</span>&amp;&amp;s[i]&lt;=<span class="string">'9'</span>) a[i]=s[i]-<span class="string">'0'</span>;</span><br><span class="line">			<span class="keyword">else</span> a[i]=s[i]-<span class="string">'A'</span>+<span class="number">10</span>;</span><br><span class="line">		&#125; </span><br><span class="line"><span class="comment">//		printf("%d..\n",a[0]);</span></span><br><span class="line">		<span class="keyword">int</span> k=(s.length())*<span class="number">4</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=s.length()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">4</span>;j++)</span><br><span class="line">			&#123;</span><br><span class="line">				b[k--]=a[i]%<span class="number">2</span>;</span><br><span class="line">				a[i]=a[i]/<span class="number">2</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(((s.length())*<span class="number">4</span>)%<span class="number">3</span>==<span class="number">0</span>) k=((s.length())*<span class="number">4</span>)/<span class="number">3</span>;</span><br><span class="line">		<span class="keyword">else</span> k=((s.length())*<span class="number">4</span>)/<span class="number">3</span>+<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">int</span> kk=k;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=(s.length())*<span class="number">4</span>;i&gt;=<span class="number">1</span>;)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> j=<span class="number">1</span>;c[k]=<span class="number">0</span>;</span><br><span class="line">			<span class="keyword">while</span>(i&gt;=<span class="number">1</span>&amp;&amp;j&lt;=<span class="number">3</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(b[i]==<span class="number">1</span>)</span><br><span class="line">				c[k]=c[k]+<span class="built_in">pow</span>(<span class="number">2</span>,j<span class="number">-1</span>);</span><br><span class="line">				i--;j++;</span><br><span class="line">			&#125;</span><br><span class="line">			k--;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">int</span> i;</span><br><span class="line">		<span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=kk;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(c[i]!=<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=kk;j++)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d"</span>,c[j]);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="G-算法提高-欧拉函数"><a href="#G-算法提高-欧拉函数" class="headerlink" title="G 算法提高 欧拉函数"></a>G 算法提高 欧拉函数</h1><h2 id="问题描述-2"><a href="#问题描述-2" class="headerlink" title="问题描述"></a>问题描述</h2><p>给定一个大于1，不超过2000000的正整数n，输出欧拉函数，phi(n)的值。欧拉函数phi(n)是数论中非常重要的一个函数，其表示1到n-1之间，与n互质的数的个数。</p>
<h2 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h2><p>可以利用类似素筛的方法将每一个数的phi值找到</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">2000000</span>+<span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">	<span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span> a);</span><br><span class="line">	a[<span class="number">1</span>]=<span class="number">1</span>;a[<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">2000000</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(!a[i])</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=<span class="number">2000000</span>;j+=i)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(!a[j]) a[j]=j;</span><br><span class="line">			a[j]=a[j]/i*(i<span class="number">-1</span>);</span><br><span class="line">		&#125; </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d"</span>,a[n]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>一些题</category>
      </categories>
  </entry>
  <entry>
    <title>猴子分桃问题</title>
    <url>/2020/03/01/%E7%8C%B4%E5%AD%90%E5%88%86%E6%A1%83%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p><img src="https://img-blog.csdnimg.cn/20200301195253534.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE5ODMwNTkx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>一道看似很简单的题，想了好久………….</strong><a id="more"></a></p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>首先我们给这堆桃子里放入4个桃子，这样第一只猴子分桃使正好可以平均分为5份(不用扔了)，每一份比原来多一个，第一只猴子拿走一份(比原来多拿了一个，这里我们可以理解为扔的那一个被他拿走了)。剩下的4份比原还来比原来多四个，加上要扔的那一个没扔，多五个。此时也可以平分为5份，这只猴子也比原来多拿了一个……依次类推,直到五只猴子都拿完。<br>因为每只猴子都拿走了自己原本的那一份以及自己扔的那一个，所以剩下的那堆比原来多四个。剩下的桃子是(x+4)(4/5)(4/5)(4/5)(4/5)(4/5)-4为整数，即(x+4)(4/5)^5为整数，即(x+4)一定要能被 5 ^5＝3125整除，所以x+4最小是3125，此时，x为3121。</p>
]]></content>
      <tags>
        <tag>思维</tag>
      </tags>
  </entry>
  <entry>
    <title>STL相关知识</title>
    <url>/2020/02/20/STL%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<p>﻿<strong>C++的标准模板库（Standard Template Library，简称STL）是一个容器和算法的类库。容器往往包含同一类型的数据。STL中比较常用的容器是vector，set和map等</strong>。<a id="more"></a></p>
<h1 id="vectore"><a href="#vectore" class="headerlink" title="vectore"></a>vectore</h1><p>一个vector类似于一个动态的一维数组,vector中可以存在重复的元素！</p>
<h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p>(1) vector<int> a;          // 声明一个元素为int类型的vector a<br>(2) vectot<MyType> a;       // 声明一个元素为MyType类型的vector a<br>a包含0个元素，即a.size()的值为0，但它是动态的，其大小会随着数据的插入和删除改变而改变。<br>(3) vector<int> a(100, 0);  // 这里声明的是一个已经存放了100个0的整数vector</p>
<h2 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h2><p>(1) for(vector<datatype>::iterator it=a.begin(); it!=a.end(); it++)<br>                    cout&lt;&lt;*it&lt;&lt;endl;<br>(2). for(int i = 0; i &lt; a.size(); i++)<br>                    cout&lt;&lt;a[i]&lt;&lt;endl;</p>
<h3 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h3><p>a.size();                      返回vector的大小，即包含的元素个数<br>a.pop_back();            删除vector末尾的元素，vector大小相应减一<br>a.push_back();          用于在vector的末尾添加元素<br>a.back();                     返回vector末尾的元素<br>a.clear();                     将vector清空，vector大小变为0<br>a.at()                           得到编号位置的数据<br>a.begin()                     得到数组头的指针<br>a.end()                        得到数组的最后一个单元+1的指针<br>a.front()                      得到数组头的引用<br>a.back()                       得到数组的最后一个单元的引用<br>a. max_size()              得到vector最大可以是多大<br>a.capacity()                 当前vector分配的大小<br>a.size()                        当前使用数据的大小<br>a.resize()                     改变当前使用数据的大小，如果它比当前使用的大，则填充默认值<br>a.reserve()                   改变当前vecotr所分配空间的大小<br>a.erase()                      删除指针指向的数据项<br>a.clear()                       清空当前的vector<br>a.rbegin()                     将vector反转后的开始指针返回(其实就是原来的end-1)<br>a.rend()                        将vector反转构的结束指针返回(其实就是原来的begin-1)<br>a.empty()                     判断vector是否为空<br>a.swap()                       与另一个vector交换数据</p>
<h1 id="map"><a href="#map" class="headerlink" title="map"></a>map</h1><p>Map是STL的一个关联容器，它提供一对一（其中第一个可以称为关键字，每个关键字只能在map中出现一次，第二个可能称为该关键字的值）的数据处理能力。</p>
<h2 id="声明-1"><a href="#声明-1" class="headerlink" title="声明"></a>声明</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; mp;</span><br></pre></td></tr></table></figure>
<h2 id="数据插入"><a href="#数据插入" class="headerlink" title="数据插入"></a>数据插入</h2><p>在构造map容器后，我们就可以往里面插入数据了。这里讲三种插入数据的方法：<br>第一种：用insert函数插入pair数据</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; mapStudent;</span><br><span class="line">mapStudent.insert(pair&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;(<span class="number">1</span>,“student_one”));</span><br></pre></td></tr></table></figure>
<p>第二种：用insert函数插入value_type数据</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; mapStudent;</span><br><span class="line">mapStudent.insert(<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::value_type (<span class="number">1</span>,<span class="string">"student_one"</span>));</span><br><span class="line">mapStudent.insert(make_pair(<span class="number">1</span>, <span class="string">"student_one"</span>));</span><br></pre></td></tr></table></figure>
<p>第三种：用数组方式插入数据</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt; mapStudent;</span><br><span class="line">mapStudent[<span class="number">1</span>] = “student_one”;</span><br><span class="line">mapStudent[<span class="number">2</span>] = “student_two”;</span><br></pre></td></tr></table></figure>
<h2 id="遍历-1"><a href="#遍历-1" class="headerlink" title="遍历"></a>遍历</h2><p>第一种：应用前向迭代器</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::iterator iter;</span><br><span class="line"><span class="keyword">for</span>(iter = mapStudent.<span class="built_in">begin</span>(); iter != mapStudent.<span class="built_in">end</span>(); iter++)</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;iter-&gt;first&lt;&lt;<span class="string">"  "</span>&lt;&lt;iter-&gt;second&lt;&lt;<span class="built_in">end</span>;</span><br></pre></td></tr></table></figure>
<p>第二种：应用反向迭代器</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="built_in">string</span>&gt;::reverse_iterator iter;</span><br><span class="line"><span class="keyword">for</span>(iter = mapStudent.rbegin(); iter != mapStudent.rend(); iter++)</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;iter-&gt;first&lt;&lt;<span class="string">"  "</span>&lt;&lt;iter-&gt;second&lt;&lt;<span class="built_in">end</span>;</span><br></pre></td></tr></table></figure>
<p>第三种：用数组方式</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> nsize = mapStudent.<span class="built_in">size</span>()</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> nIndex = <span class="number">1</span>; nIndex &lt;= nSize; nIndex++)</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;mapStudent[nIndex]&lt;&lt;<span class="built_in">end</span>;</span><br></pre></td></tr></table></figure>
<p>/////</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(it=m.<span class="built_in">begin</span>();it!=m.<span class="built_in">end</span>();++it)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"key: "</span>&lt;&lt;it-&gt;first &lt;&lt;<span class="string">" value: "</span>&lt;&lt;it-&gt;second&lt;&lt;<span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure>
<h1 id="set"><a href="#set" class="headerlink" title="set"></a>set</h1><p>set是集合，set中不会包含重复的元素，这是和vector的区别。</p>
<h2 id="遍历-2"><a href="#遍历-2" class="headerlink" title="遍历"></a>遍历</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;ss;</span><br><span class="line">        <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it;</span><br><span class="line">        <span class="keyword">for</span>(it = ss.<span class="built_in">begin</span>(); it != ss.<span class="built_in">end</span>(); it++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>,*it);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><ol>
<li>begin()         返回指向第一个元素的迭代器</li>
<li>clear()         清除所有元素</li>
<li>count()         返回某个值元素的个数</li>
<li>empty()         如果集合为空，返回true</li>
<li>end()           返回指向最后一个元素的迭代器</li>
<li>equal_range()   返回集合中与给定值相等的上下限的两个迭代器</li>
<li>erase()         删除集合中的元素</li>
<li>find()          返回一个指向被查找到元素的迭代器</li>
<li>get_allocator() 返回集合的分配器</li>
<li>insert()        在集合中插入元素 </li>
<li>lower_bound()   返回指向大于（或等于）某值的第一个元素的迭代器</li>
<li>key_comp()      返回一个用于元素间值比较的函数</li>
<li>max_size()      返回集合能容纳的元素的最大限值</li>
<li>rbegin()        返回指向集合中最后一个元素的反向迭代器</li>
<li>rend()          返回指向集合中第一个元素的反向迭代器</li>
<li>size()          集合中元素的数目</li>
<li>swap()          交换两个集合变量</li>
<li>upper_bound()   返回大于某个值元素的迭代器</li>
<li>value_comp()    返回一个用于比较元素间的值的函数</li>
</ol>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title>高精度乘与除 </title>
    <url>/2020/02/15/%E9%AB%98%E7%B2%BE%E5%BA%A6%E4%B9%98%E4%B8%8E%E9%99%A4/</url>
    <content><![CDATA[<p><strong>当数的位数过多，爆long long时，进行乘除操作就要用到高精度</strong>。<a id="more"></a></p>
<h2 id="高精度乘"><a href="#高精度乘" class="headerlink" title="高精度乘"></a>高精度乘</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 初始化 sum[10000]=&#123;0,1&#125;,lens=1;</span></span><br><span class="line"><span class="comment">// sum数组后面为高位，前面为低位，lens记录数组sum的长度。</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">times</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x)</span><span class="comment">//x 为要乘进去的数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lens;i++)&#123;</span><br><span class="line">		sum[i]*=x;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lens;i++)&#123;</span><br><span class="line">		t+=sum[i];</span><br><span class="line">		sum[i]=t%<span class="number">10</span>;</span><br><span class="line">		t/=<span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(t!=<span class="number">0</span>)&#123;</span><br><span class="line">		lens++;</span><br><span class="line">		sum[lens]=t%<span class="number">10</span>;</span><br><span class="line">		t/=<span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="高精度除"><a href="#高精度除" class="headerlink" title="高精度除"></a>高精度除</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// sum为高精度的被除数，x为除数，数组ans里存的是商（后边为高位，前边为低位）。</span></span><br><span class="line"><span class="comment">// lend记录数组ans的长度。</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">division</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">	lend=lens;</span><br><span class="line">	<span class="built_in">memset</span>(ans,<span class="number">0</span>,<span class="keyword">sizeof</span>(ans));</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=lend;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">		t*=<span class="number">10</span>;</span><br><span class="line">		t+=sum[i];</span><br><span class="line">		<span class="keyword">if</span>(t&gt;=x)&#123;</span><br><span class="line">			ans[i]=t/x;</span><br><span class="line">			t%=x;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(ans[lend]==<span class="number">0</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span>(lend==<span class="number">1</span>)</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		lend--;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>模板</category>
      </categories>
  </entry>
  <entry>
    <title>洛谷P1080 国王游戏</title>
    <url>/2020/02/15/%E6%B4%9B%E8%B0%B7P1080-%E5%9B%BD%E7%8E%8B%E6%B8%B8%E6%88%8F/</url>
    <content><![CDATA[<p><strong>超级会玩的国王</strong><a id="more"></a></p>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>恰逢 H国国庆，国王邀请n 位大臣来玩一个有奖游戏。首先，他让每个大臣在左、右手上面分别写下一个整数，国王自己也在左、右手上各写一个整数。然后，让这 n位大臣排成一排，国王站在队伍的最前面。排好队后，所有的大臣都会获得国王奖赏的若干金币，每位大臣获得的金币数分别是：排在该大臣前面的所有人的左手上的数的乘积除以他自己右手上的数，然后向下取整得到的结果。</p>
<p>国王不希望某一个大臣获得特别多的奖赏，所以他想请你帮他重新安排一下队伍的顺序，使得获得奖赏最多的大臣，所获奖赏尽可能的少。注意，国王的位置始终在队伍的最前面。</p>
<h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行包含一个整数n，表示大臣的人数。</p>
<p>第二行包含两个整数 a和 b，之间用一个空格隔开，分别表示国王左手和右手上的整数。</p>
<p>接下来 n行，每行包含两个整数a 和 b，之间用一个空格隔开，分别表示每个大臣左手和右手上的整数。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>一个整数，表示重新排列后的队伍中获奖赏最多的大臣所获得的金币数。</p>
<h2 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h2><p><strong>输入 #1</strong>复制</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 </span><br><span class="line">1 1 </span><br><span class="line">2 3 </span><br><span class="line">7 4 </span><br><span class="line">4 6</span><br></pre></td></tr></table></figure>
<p><strong>输出 #1</strong>复制</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure>
<h2 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h2><p>【输入输出样例说明】</p>
<p>按1、2、3 这样排列队伍，获得奖赏最多的大臣所获得金币数为 2；</p>
<p>按 1、3、2这样排列队伍，获得奖赏最多的大臣所获得金币数为2；</p>
<p>按 2、1、3 这样排列队伍，获得奖赏最多的大臣所获得金币数为 2；</p>
<p>按2、3、1这样排列队伍，获得奖赏最多的大臣所获得金币数为9；</p>
<p>按 3、1、2这样排列队伍，获得奖赏最多的大臣所获得金币数为 2；</p>
<p>按3、2、1 这样排列队伍，获得奖赏最多的大臣所获得金币数为 9。</p>
<p>因此，奖赏最多的大臣最少获得 2个金币，答案输出 2。</p>
<p>【数据范围】</p>
<p>对于 20%的数据，有 1≤ n≤ 10,0 &lt; a,b &lt; 8；</p>
<p>对于 40%的数据，有1≤ n≤20,0 &lt; a,b &lt; 8；</p>
<p>对于 60%的数据，有 1≤ n≤100；</p>
<p>对于 60%的数据，保证答案不超过 10^9；</p>
<p>对于 100%的数据，有 1 ≤ n ≤1,000,0 &lt; a,b &lt; 10000。</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>本题的代码并不难写，主要是思路的分析，分析如下。</p>
<p>我们对于国王身后的两个点来分析</p>
<p>队列可能是这样的：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">*</th>
<th style="text-align:right">Left</th>
<th style="text-align:center">Right</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">king:</td>
<td style="text-align:right"><em>a</em>0</td>
<td style="text-align:center"><em>b</em>0</td>
</tr>
<tr>
<td style="text-align:left">p1</td>
<td style="text-align:right">a1</td>
<td style="text-align:center"><em>b</em>1</td>
</tr>
<tr>
<td style="text-align:left">p2</td>
<td style="text-align:right">a2</td>
<td style="text-align:center">b2</td>
</tr>
</tbody>
</table>
</div>
<p>那么我们计算可得</p>
<script type="math/tex; mode=display">
ans_1=max(\frac{a_0}{b_1},\frac{a_0*a_1}{b_2})</script><p>队列也有可能是这样的</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">*</th>
<th style="text-align:right">Left</th>
<th style="text-align:center">Right</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">king:</td>
<td style="text-align:right"><em>a</em>0</td>
<td style="text-align:center"><em>b</em>0</td>
</tr>
<tr>
<td style="text-align:left">p2</td>
<td style="text-align:right"><em>a</em>2</td>
<td style="text-align:center"><em>b</em>2</td>
</tr>
<tr>
<td style="text-align:left">p1</td>
<td style="text-align:right"><em>a</em>1</td>
<td style="text-align:center"><em>b</em>1</td>
</tr>
</tbody>
</table>
</div>
<p>那么我们计算可得</p>
<script type="math/tex; mode=display">
ans_2=max(\frac{a_0}{b_2},\frac{a_0*a_2}{b_1})</script><p>我们来对比一下两个答案：</p>
<script type="math/tex; mode=display">
ans_1=max(\frac{a_0}{b_1},\frac{a_0*a_1}{b_2}),
ans_2=max(\frac{a_0}{b_2},\frac{a_0*a_2}{b_1})</script><p>显然我们可以得到:</p>
<script type="math/tex; mode=display">
\frac{a_0*a_1}{b_2}>\frac{a_0}{b_2},

\frac{a_0*a_2}{b_1}>\frac{a_0}{b_1}</script><p>如果</p>
<script type="math/tex; mode=display">
ans_1<ans_2</script><p>那么易得：</p>
<script type="math/tex; mode=display">
\frac{a_0*a_2}{b_1}>\frac{a_0*a_1}{b_2}</script><p>变形可得：</p>
<script type="math/tex; mode=display">
a_1*b_1<a_2*b_2</script><p>当</p>
<script type="math/tex; mode=display">
a_1*b_1<a_2*b_2</script><p>时，我们也能够得到</p>
<script type="math/tex; mode=display">
ans_1<ans_2</script><p>的结论</p>
<p>所以，为了ans取到最小值，我们需要将</p>
<script type="math/tex; mode=display">
a_i*b_i</script><p>较小的放在前面</p>
<p>那么我们以</p>
<script type="math/tex; mode=display">
a_i*b_i</script><p>为关键字排序即可</p>
<p>统计答案时一定<strong>不要忘了写高精度！</strong></p>
<h2 id="AC-code"><a href="#AC-code" class="headerlink" title="AC code"></a>AC code</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,a,b;</span><br><span class="line"><span class="keyword">int</span> sum[<span class="number">100000</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>&#125;,ans[<span class="number">100000</span>],m[<span class="number">100000</span>],lens=<span class="number">1</span>,lend=<span class="number">1</span>,lenm=<span class="number">1</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stt</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">int</span> l,r;</span><br><span class="line">	<span class="keyword">int</span> lr;</span><br><span class="line">&#125;st[<span class="number">10000000</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(stt p,stt q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> p.lr&lt;q.lr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">times</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x)</span><span class="comment">//高精度乘</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lens;i++)&#123;</span><br><span class="line">		sum[i]*=x;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lens;i++)&#123;</span><br><span class="line">		t+=sum[i];</span><br><span class="line">		sum[i]=t%<span class="number">10</span>;</span><br><span class="line">		t/=<span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(t!=<span class="number">0</span>)&#123;</span><br><span class="line">		lens++;</span><br><span class="line">		sum[lens]=t%<span class="number">10</span>;</span><br><span class="line">		t/=<span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">division</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> x)</span><span class="comment">//高精度除</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">	lend=lens;</span><br><span class="line">	<span class="built_in">memset</span>(ans,<span class="number">0</span>,<span class="keyword">sizeof</span>(ans));</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=lend;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">		t*=<span class="number">10</span>;</span><br><span class="line">		t+=sum[i];</span><br><span class="line">		<span class="keyword">if</span>(t&gt;=x)&#123;</span><br><span class="line">			ans[i]=t/x;</span><br><span class="line">			t%=x;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(ans[lend]==<span class="number">0</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span>(lend==<span class="number">1</span>)</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		lend--;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(lenm&lt;lend)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lend;i++)&#123;</span><br><span class="line">			m[i]=ans[i];</span><br><span class="line">		&#125;</span><br><span class="line">		lenm=lend;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(lenm==lend)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=lend;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">			<span class="keyword">if</span>(m[i]&lt;ans[i])&#123;</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=lend;j++)</span><br><span class="line">					m[j]=ans[j];</span><br><span class="line">				lenm=lend;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;st[i].l&gt;&gt;st[i].r;</span><br><span class="line">		st[i].lr=st[i].l*st[i].r;</span><br><span class="line">	&#125; </span><br><span class="line">	sort(st+<span class="number">1</span>,st+<span class="number">1</span>+n,cmp);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		times(st[i<span class="number">-1</span>].l);</span><br><span class="line">		division(st[i].r);</span><br><span class="line">		solve();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=lenm;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d"</span>,m[i]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>一些题</category>
      </categories>
      <tags>
        <tag>贪心</tag>
        <tag>高精度</tag>
      </tags>
  </entry>
  <entry>
    <title>大二数据结构排序作业</title>
    <url>/2020/02/12/%E5%A4%A7%E4%BA%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%8E%92%E5%BA%8F%E4%BD%9C%E4%B8%9A/</url>
    <content><![CDATA[<p><strong>通过对数据结构的学习，本程序将7种常见的排序算法整理结合在一起，通过比较同一数据下的排序所需要的时间和交换比较次数，更加明显的认识到各种排序算法的优劣，文末有生成的随机数提供</strong>。<a id="more"></a></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> l[<span class="number">10000000</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> length,com=<span class="number">0</span>,<span class="built_in">move</span>=<span class="number">0</span>,t;<span class="comment">//数据存储，长度，比较次数，移动次数。</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insertsort</span><span class="params">(<span class="keyword">int</span> *l)</span> <span class="comment">//直接插入排序。</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	com=<span class="built_in">move</span>=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		com++;</span><br><span class="line">		<span class="keyword">if</span>(l[i]&lt;l[i<span class="number">-1</span>])</span><br><span class="line">		&#123;</span><br><span class="line">			l[<span class="number">0</span>]=l[i];</span><br><span class="line">			l[i]=l[i<span class="number">-1</span>];</span><br><span class="line">			<span class="built_in">move</span>++;</span><br><span class="line">			<span class="keyword">int</span> j; </span><br><span class="line">			<span class="keyword">for</span>(j=i<span class="number">-2</span>;l[<span class="number">0</span>]&lt;l[j];j--)</span><br><span class="line">			&#123;</span><br><span class="line">				l[j+<span class="number">1</span>]=l[j];</span><br><span class="line">				<span class="built_in">move</span>++;</span><br><span class="line">				<span class="comment">//com++;	</span></span><br><span class="line">			&#125;</span><br><span class="line">			l[j+<span class="number">1</span>]=l[<span class="number">0</span>];	</span><br><span class="line">		&#125;	</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"直接插入排序的比较次数：%lld\n\n"</span>,com);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"直接插入排序的移动次数：%lld\n\n"</span>,<span class="built_in">move</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binsertsort</span><span class="params">(<span class="keyword">int</span> *l)</span><span class="comment">//折半插入排序 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	com=<span class="built_in">move</span>=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> low,high,mid;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		l[<span class="number">0</span>]=l[i];</span><br><span class="line">		low=<span class="number">1</span>;high=i<span class="number">-1</span>;</span><br><span class="line">		<span class="keyword">while</span>(low&lt;=high)</span><br><span class="line">		&#123;</span><br><span class="line">			mid=(low+high)/<span class="number">2</span>;</span><br><span class="line">			com++;</span><br><span class="line">			<span class="keyword">if</span>(l[<span class="number">0</span>]&lt;l[mid]) high=mid<span class="number">-1</span>;</span><br><span class="line">			<span class="keyword">else</span> low=mid+<span class="number">1</span>;	</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i<span class="number">-1</span>;j&gt;=high+<span class="number">1</span>;j--)</span><br><span class="line">		&#123;</span><br><span class="line">			l[j+<span class="number">1</span>]=l[j];</span><br><span class="line">			<span class="built_in">move</span>++;	</span><br><span class="line">		&#125;</span><br><span class="line">		l[high+<span class="number">1</span>]=l[<span class="number">0</span>];</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"折半插入排序比较次数 ：%lld \n\n"</span>,com); </span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"折半插入排序移动次数 ：%lld \n\n"</span>,<span class="built_in">move</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shellinsert</span><span class="params">(<span class="keyword">int</span> *r,<span class="keyword">int</span> dk)</span><span class="comment">//希尔排序 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=dk+<span class="number">1</span>;i&lt;=length;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		com++;</span><br><span class="line">		<span class="keyword">if</span>(r[i]&lt;r[i-dk])</span><br><span class="line">		&#123;</span><br><span class="line">			l[<span class="number">0</span>]=l[i];</span><br><span class="line">			<span class="keyword">int</span> j;</span><br><span class="line">			<span class="keyword">for</span>(j=i-dk;j&gt;<span class="number">0</span>&amp;&amp;r[<span class="number">0</span>]&lt;r[j];j-=dk)</span><br><span class="line">			&#123;</span><br><span class="line">				l[j+dk]=l[j];</span><br><span class="line">				<span class="built_in">move</span>++;</span><br><span class="line">			&#125;</span><br><span class="line">			l[j+dk]=l[<span class="number">0</span>];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shellsort</span><span class="params">(<span class="keyword">int</span> *l,<span class="keyword">int</span> dt[],<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	com=<span class="built_in">move</span>=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=t;k++)</span><br><span class="line">		shellinsert(l,dt[k]);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"希尔排序比较次数 ：%lld \n\n"</span>,com); </span><br><span class="line"> 	<span class="built_in">printf</span>(<span class="string">"希尔插入排序移动次数 ：%lld \n\n"</span>,<span class="built_in">move</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubblesort</span><span class="params">(<span class="keyword">int</span> *l)</span><span class="comment">//冒泡排序 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	com=<span class="built_in">move</span>=<span class="number">0</span>;<span class="keyword">int</span> t;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=length<span class="number">-1</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=length-i;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			com++;</span><br><span class="line">			<span class="keyword">if</span>(l[j]&gt;l[j+<span class="number">1</span>])</span><br><span class="line">			&#123;</span><br><span class="line">				t=l[j];</span><br><span class="line">				l[j]=l[j+<span class="number">1</span>];</span><br><span class="line">				l[j+<span class="number">1</span>]=t;</span><br><span class="line">				<span class="built_in">move</span>=<span class="built_in">move</span>+<span class="number">3</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"冒泡排序比较次数 ：%lld \n\n"</span>,com); </span><br><span class="line"> 	<span class="built_in">printf</span>(<span class="string">"冒泡排序移动次数 ：%lld \n\n"</span>,<span class="built_in">move</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="keyword">int</span> *l,<span class="keyword">int</span> low,<span class="keyword">int</span> high)</span>   <span class="comment">//快速排序 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	l[<span class="number">0</span>]=l[low];</span><br><span class="line">	<span class="keyword">int</span> pivotkey=l[low];</span><br><span class="line">	<span class="keyword">while</span>(low&lt;high)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">while</span>(low&lt;high&amp;&amp;l[high]&gt;=pivotkey) </span><br><span class="line">		 &#123;--high;com++;&#125;</span><br><span class="line">		l[low]=l[high];<span class="built_in">move</span>++;com++;</span><br><span class="line">		<span class="keyword">while</span>(low&lt;high&amp;&amp;l[low]&lt;=pivotkey)  </span><br><span class="line">		 &#123;++low;com++;&#125;</span><br><span class="line">		l[high]=l[low];<span class="built_in">move</span>++;com++;</span><br><span class="line">	&#125;</span><br><span class="line">	l[low]=l[<span class="number">0</span>];</span><br><span class="line">	<span class="keyword">return</span> low;	</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">qsort</span><span class="params">(<span class="keyword">int</span> *l,<span class="keyword">long</span> low,<span class="keyword">long</span> high)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(low&lt;high)</span><br><span class="line">	&#123;   </span><br><span class="line">		<span class="keyword">int</span> pivotloc=partition(l,low,high);</span><br><span class="line">		qsort(l,low,pivotloc<span class="number">-1</span>);</span><br><span class="line">		qsort(l,pivotloc+<span class="number">1</span>,high);</span><br><span class="line">	&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quicksort</span><span class="params">(<span class="keyword">int</span> *l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   com=<span class="built_in">move</span>=<span class="number">0</span>;</span><br><span class="line">   qsort(l,<span class="number">1</span>,length);</span><br><span class="line">   	<span class="built_in">printf</span>(<span class="string">"快速排序比较次数 ：%lld \n\n"</span>,com); </span><br><span class="line"> 	<span class="built_in">printf</span>(<span class="string">"快速排序移动次数 ：%lld \n\n"</span>,<span class="built_in">move</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectsort</span><span class="params">(<span class="keyword">int</span> *l)</span>       <span class="comment">//简单选择排序 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i,j,k,t;</span><br><span class="line">	com=<span class="built_in">move</span>=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=length;++i)</span><br><span class="line">	&#123; </span><br><span class="line">	  k=i;  </span><br><span class="line">	  <span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;=length;++j)</span><br><span class="line">	  &#123;</span><br><span class="line">	  	com++;</span><br><span class="line">	    <span class="keyword">if</span>(l[j]&lt;l[k]) k=j; </span><br><span class="line">	  &#125;</span><br><span class="line">	  <span class="keyword">if</span>(k!=i)</span><br><span class="line">	  &#123;</span><br><span class="line">	  	t=l[i]; </span><br><span class="line">	  	l[i]=l[k];</span><br><span class="line">	  	l[k]=t;</span><br><span class="line">	  	<span class="built_in">move</span>+=<span class="number">3</span>;</span><br><span class="line">	  &#125;</span><br><span class="line">	&#125; </span><br><span class="line"> 	<span class="built_in">printf</span>(<span class="string">"简单选择排序比较次数 ：%lld \n\n"</span>,com); </span><br><span class="line"> 	<span class="built_in">printf</span>(<span class="string">"简单选择排序移动次数 ：%lld \n\n"</span>,<span class="built_in">move</span>);	</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">heapadjust</span><span class="params">(<span class="keyword">int</span> *l,<span class="keyword">int</span> s,<span class="keyword">int</span> m)</span>   <span class="comment">//堆排序 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> rc=l[s];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>*s;j&lt;=m;j*=<span class="number">2</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		com++;</span><br><span class="line">		<span class="keyword">if</span>(j&lt;m&amp;&amp;l[j]&lt;l[j+<span class="number">1</span>]) ++j;</span><br><span class="line">		com++;</span><br><span class="line">		<span class="keyword">if</span>(rc&gt;=l[j]) <span class="keyword">break</span>;</span><br><span class="line">		l[s]=l[j];</span><br><span class="line">		s=j; </span><br><span class="line">	&#125;</span><br><span class="line">	  l[s]=rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creatheap</span><span class="params">(<span class="keyword">int</span> *l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> n=length;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">long</span> i=n/<span class="number">2</span>;i&gt;<span class="number">0</span>;--i)</span><br><span class="line">	heapadjust(l,i,n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">heapsort</span><span class="params">(<span class="keyword">int</span> *l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	com=<span class="built_in">move</span>=<span class="number">0</span>;</span><br><span class="line">	creatheap(l);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=length;i&gt;<span class="number">1</span>;--i)</span><br><span class="line">	 &#123;</span><br><span class="line">	 	<span class="keyword">int</span> x=l[<span class="number">1</span>];</span><br><span class="line">	 	l[<span class="number">1</span>]=l[i];</span><br><span class="line">	 	l[i]=x;</span><br><span class="line">	 	<span class="built_in">move</span>+=<span class="number">3</span>;</span><br><span class="line">	 	heapadjust(l,<span class="number">1</span>,i<span class="number">-1</span>);</span><br><span class="line">	 &#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"堆排序比较次数 ：%lld \n\n"</span>,com); </span><br><span class="line"> 	<span class="built_in">printf</span>(<span class="string">"堆排序移动次数 ：%lld \n\n"</span>,<span class="built_in">move</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> dt[<span class="number">100000</span>],m,t;</span><br><span class="line">	<span class="keyword">double</span> start,<span class="built_in">end</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"1.从文件中读取 \n\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"2.升序数据 \n\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"3.降序数据 \n\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"4.手动输入数据\n\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"请选择输入数据的方式：\n\n"</span>);</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;m;</span><br><span class="line">	<span class="keyword">switch</span>(m)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"输入排序数组长度length(100,10000,100000,1000000)："</span>);</span><br><span class="line">			<span class="built_in">cin</span>&gt;&gt;length;</span><br><span class="line">			<span class="keyword">if</span>(length==<span class="number">100</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				FILE *fp=fopen(<span class="string">"100.txt"</span>,<span class="string">"rb"</span>);</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">long</span> i=<span class="number">1</span>;i&lt;=length;i++)</span><br><span class="line">       			<span class="built_in">fscanf</span>(fp,<span class="string">"%ld"</span>,&amp;l[i]);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(length==<span class="number">10000</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				FILE *fp=fopen(<span class="string">"10000.txt"</span>,<span class="string">"rb"</span>);</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">long</span> i=<span class="number">1</span>;i&lt;=length;i++)</span><br><span class="line">       			<span class="built_in">fscanf</span>(fp,<span class="string">"%ld"</span>,&amp;l[i]);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(length==<span class="number">100000</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				FILE *fp=fopen(<span class="string">"100000.txt"</span>,<span class="string">"rb"</span>);</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">long</span> i=<span class="number">1</span>;i&lt;=length;i++)</span><br><span class="line">       			<span class="built_in">fscanf</span>(fp,<span class="string">"%ld"</span>,&amp;l[i]);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(length==<span class="number">1000000</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				FILE *fp=fopen(<span class="string">"1000000.txt"</span>,<span class="string">"rb"</span>);</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">long</span> i=<span class="number">1</span>;i&lt;=length;i++)</span><br><span class="line">       			<span class="built_in">fscanf</span>(fp,<span class="string">"%ld"</span>,&amp;l[i]);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"输入排序数组长度length(10000)："</span>);</span><br><span class="line">			<span class="built_in">cin</span>&gt;&gt;length;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">long</span> i=<span class="number">1</span>;i&lt;=length;i++)</span><br><span class="line">     		l[i]=i;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">3</span>:&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"输入排序数组长度length(10000)："</span>);</span><br><span class="line">			<span class="built_in">cin</span>&gt;&gt;length;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=length;i++)</span><br><span class="line">			l[i]=length-i+<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">4</span>:&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"输入需要排序的数据："</span>);</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=length;i++)</span><br><span class="line">			<span class="built_in">cin</span>&gt;&gt;l[i];</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"1.直接插入排序 \n\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"2.折半插入排序 \n\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"3.希尔排序\n\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"4.冒泡排序\n\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"5.快速排序\n\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"6.简单选择排序\n\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"7.堆排序\n\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"选择排序方式: "</span>); </span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;m;</span><br><span class="line">	<span class="keyword">switch</span>(m)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">1</span>:&#123;</span><br><span class="line">			start=clock();</span><br><span class="line">            insertsort(l);</span><br><span class="line">	        <span class="built_in">end</span>=clock(); </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"直接插入排序运行时间T:%lf \n\n"</span>,<span class="built_in">end</span>-start);</span><br><span class="line"><span class="comment">//            for(int i=1;i&lt;=length;i++)</span></span><br><span class="line"><span class="comment">//            &#123;</span></span><br><span class="line"><span class="comment">//            	printf("%d ",l[i]);</span></span><br><span class="line"><span class="comment">//			&#125;</span></span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">2</span>:&#123;</span><br><span class="line">			start=clock();</span><br><span class="line">            binsertsort(l);</span><br><span class="line">	    	<span class="built_in">end</span>=clock(); </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"折半插入排序运行时间T:%lf \n\n"</span>,<span class="built_in">end</span>-start);</span><br><span class="line"><span class="comment">//            for(int i=1;i&lt;=length;i++)</span></span><br><span class="line"><span class="comment">//            &#123;</span></span><br><span class="line"><span class="comment">//            	printf("%d ",l[i]);</span></span><br><span class="line"><span class="comment">//			&#125;</span></span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">3</span>:&#123;</span><br><span class="line">			<span class="keyword">int</span> t=log2(length+<span class="number">1</span>)/<span class="number">1</span>; </span><br><span class="line"> 	        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=t;k++)</span><br><span class="line"> 	            dt[k]=<span class="built_in">pow</span>(<span class="number">2</span>,t-k+<span class="number">1</span>)<span class="number">-1</span>;</span><br><span class="line">	        start=clock();</span><br><span class="line">            shellsort(l,dt,t);</span><br><span class="line">	        <span class="built_in">end</span>=clock(); </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"希尔排序运行时间T:%lf \n\n"</span>,<span class="built_in">end</span>-start);</span><br><span class="line"><span class="comment">//            for(int i=1;i&lt;=length;i++)</span></span><br><span class="line"><span class="comment">//            &#123;</span></span><br><span class="line"><span class="comment">//            	printf("%d ",l[i]);</span></span><br><span class="line"><span class="comment">//			&#125;</span></span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">4</span>:&#123;</span><br><span class="line">			start=clock();</span><br><span class="line">            bubblesort(l);   </span><br><span class="line">	        <span class="built_in">end</span>=clock(); </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"冒泡排序运行时间T:%lf \n\n"</span>,<span class="built_in">end</span>-start);</span><br><span class="line"><span class="comment">//            for(int i=1;i&lt;=length;i++)</span></span><br><span class="line"><span class="comment">//            &#123;</span></span><br><span class="line"><span class="comment">//            	printf("%d ",l[i]);</span></span><br><span class="line"><span class="comment">//			&#125;</span></span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">5</span>:&#123;</span><br><span class="line">			start=clock();</span><br><span class="line">            quicksort(l); </span><br><span class="line">	        <span class="built_in">end</span>=clock();  </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"快速排序运行时间T:%lf \n\n"</span>,<span class="built_in">end</span>-start);</span><br><span class="line"><span class="comment">//            for(int i=1;i&lt;=length;i++)</span></span><br><span class="line"><span class="comment">//            &#123;</span></span><br><span class="line"><span class="comment">//            	printf("%d ",l[i]);</span></span><br><span class="line"><span class="comment">//			&#125;</span></span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">6</span>:&#123;</span><br><span class="line">			start=clock();</span><br><span class="line">		    selectsort(l);</span><br><span class="line">		    <span class="built_in">end</span>=clock(); </span><br><span class="line">		    <span class="built_in">printf</span>(<span class="string">"简单选择排序运行时间T:%lf \n\n"</span>,<span class="built_in">end</span>-start);</span><br><span class="line"><span class="comment">//		    for(int i=1;i&lt;=length;i++)</span></span><br><span class="line"><span class="comment">//            &#123;</span></span><br><span class="line"><span class="comment">//            	printf("%d ",l[i]);</span></span><br><span class="line"><span class="comment">//			&#125;</span></span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">7</span>:&#123;</span><br><span class="line">			start=clock();</span><br><span class="line">			heapsort(l);</span><br><span class="line">            <span class="built_in">end</span>=clock(); </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"堆排序运行时间T:%lf \n\n"</span>,<span class="built_in">end</span>-start);</span><br><span class="line"><span class="comment">//            for(int i=1;i&lt;=length;i++)</span></span><br><span class="line"><span class="comment">//            &#123;</span></span><br><span class="line"><span class="comment">//            	printf("%d ",l[i]);</span></span><br><span class="line"><span class="comment">//			&#125;</span></span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125; </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>100: <a href="100.txt" title="C源码下载">点击下载</a></p>
<p>10000: <a href="10000.txt" title="C源码下载">点击下载</a></p>
<p>100000 :<a href="100000.txt" title="C源码下载">点击下载</a></p>
<p>1000000: <a href="1000000.txt" title="C源码下载">点击下载</a></p>
<p>10000000: <a href="10000000.txt" title="C源码下载">点击下载</a></p>
<p>排序结果(电脑不同结果也不一样)<a href="排序.xlsx" title="C源码下载">点击下载</a></p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title>洛谷P1309 瑞士轮(归并排序)</title>
    <url>/2020/02/12/%E6%B4%9B%E8%B0%B7P1309-%E7%91%9E%E5%A3%AB%E8%BD%AE(%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F)/</url>
    <content><![CDATA[<p><strong>当sort大法不再好用的时候。</strong></p>
<a id="more"></a>
<h2 id="题目背景"><a href="#题目背景" class="headerlink" title="题目背景"></a>题目背景</h2><p>在双人对决的竞技性比赛，如乒乓球、羽毛球、国际象棋中，最常见的赛制是淘汰赛和循环赛。前者的特点是比赛场数少，每场都紧张刺激，但偶然性较高。后者的特点是较为公平，偶然性较低，但比赛过程往往十分冗长。</p>
<p>本题中介绍的瑞士轮赛制，因最早使用于18951895年在瑞士举办的国际象棋比赛而得名。它可以看作是淘汰赛与循环赛的折中，既保证了比赛的稳定性，又能使赛程不至于过长。</p>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>2×<em>N</em> 名编号为 1∼2<em>N</em> 的选手共进行R 轮比赛。每轮比赛开始前，以及所有比赛结束后，都会按照总分从高到低对选手进行一次排名。选手的总分为第一轮开始前的初始分数加上已参加过的所有比赛的得分和。总分相同的，约定编号较小的选手排名靠前。</p>
<p>每轮比赛的对阵安排与该轮比赛开始前的排名有关：第1 名和第2 名、第 3 名和第 4名、……、第2<em>K</em>−1名和第2<em>K</em>名、…… 、第2<em>N</em>−1名和第2<em>N</em>名，各进行一场比赛。每场比赛胜者得1分，负者得 0分。也就是说除了首轮以外，其它轮比赛的安排均不能事先确定，而是要取决于选手在之前比赛中的表现。</p>
<p>现给定每个选手的初始分数及其实力值，试计算在R 轮比赛过后，排名第Q的选手编号是多少。我们假设选手的实力值两两不同，且每场比赛中实力值较高的总能获胜。</p>
<h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行是三个正整数N,R ,Q每两个数之间用一个空格隔开，表示有 2×<em>N</em>名选手、R<em>R</em> 轮比赛，以及我们关心的名次Q。</p>
<p>第二行是2×<em>N</em> 个非负整数s1, s2, ……,<em>s</em>2<em>N</em>，每两个数之间用一个空格隔开，其中si表示编号为i的选手的初始分数。 第三行是2×<em>N</em> 个正整数w1 , w2 , ……,<em>w</em>2<em>N</em>，每两个数之间用一个空格隔开，其中 wi表示编号为i的选手的实力值。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>一个整数，即R轮比赛结束后，排名第Q的选手的编号。</p>
<h2 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h2><p><strong>输入 #1</strong>复制</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2 4 2 </span><br><span class="line">7 6 6 7 </span><br><span class="line">10 5 20 15</span><br></pre></td></tr></table></figure>
<p><strong>输出 #1</strong>复制</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure>
<h2 id="说明-提示"><a href="#说明-提示" class="headerlink" title="说明/提示"></a>说明/提示</h2><p>【样例解释】</p>
<p><img src="https://cdn.luogu.com.cn/upload/pic/98.png" alt="img"></p>
<p>【数据范围】</p>
<p>对于30%的数据，1≤<em>N</em>≤100；</p>
<p>对于50%的数据，1≤<em>N</em>≤10,000；</p>
<p>对于100%的数据，1 ≤ N ≤ 100,000,1 ≤ R ≤ 50,1 ≤ Q ≤ 2N,0 ≤ s1, s2, …, s<em>{2N}≤10^8,1 ≤w_1, w_2 , …, w</em>{2N}≤ 10^8。</p>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><h5 id="一、关于sort的浪费"><a href="#一、关于sort的浪费" class="headerlink" title="一、关于sort的浪费"></a><strong>一、关于sort的浪费</strong></h5><p>看到题首先想到的是sort+结构体的做法，交了一发TLE。因为sort的用的其实就是二分的思想，稳定的话复杂度在O(n*logn)左右，但是仔细想想此题——每次需要更新的值，都是相邻两个人变化后的分数；而相邻的分数，有些是不会改变位置的，而快速排序则是每次全部修改，必然会造成浪费。。</p>
<p><strong>二、关于归并排序</strong></p>
<p>虽然归并排序的稳定时间复杂度也为O（n*logn），但是我们可以发现，归并排序每次的操作只针对相邻区间，或者说合并时是对相邻几个区间的操作，所以这符合只需要修改相邻几个分数的排布状况的题意。即使和快排的复杂度相同，但是省掉了冗杂无用的操作，是一个极大的改良。</p>
<p>归并排序的函数参数：merge(first1,last1,first2,last2,result,compare);</p>
<p>firs1t为第一个容器的首迭代器，last1为第一个容器的末迭代器；</p>
<p>first2为第二个容器的首迭代器，last2为容器的末迭代器；</p>
<p>result为存放结果的容器，comapre为比较函数（可略写，默认为合并为一个升序序列）</p>
<h1 id="AC-code"><a href="#AC-code" class="headerlink" title="AC code"></a>AC code</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,r,q;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stt</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">int</span> a;</span><br><span class="line">	<span class="keyword">int</span> s,w;</span><br><span class="line">&#125;st[<span class="number">200000</span>+<span class="number">100</span>],w[<span class="number">200000</span>+<span class="number">100</span>],l[<span class="number">200000</span>+<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(stt p,stt q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(p.s==q.s) <span class="keyword">return</span> p.a&lt;q.a;</span><br><span class="line">	<span class="keyword">return</span> p.s&gt;q.s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;r&gt;&gt;q;</span><br><span class="line">	n=n*<span class="number">2</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;st[i].s;</span><br><span class="line">		st[i].a=i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;st[i].w;</span><br><span class="line">	&#125;</span><br><span class="line">	sort(st+<span class="number">1</span>,st+n+<span class="number">1</span>,cmp);</span><br><span class="line">	<span class="keyword">while</span>(r--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> win=<span class="number">0</span>,lose=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++,i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(st[i].w&gt;st[i+<span class="number">1</span>].w) </span><br><span class="line">			&#123;</span><br><span class="line">				w[++win]=st[i];</span><br><span class="line">				w[win].s++;</span><br><span class="line">				l[++lose]=st[i+<span class="number">1</span>];</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				w[++win]=st[i+<span class="number">1</span>];</span><br><span class="line">				w[win].s++;</span><br><span class="line">				l[++lose]=st[i];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		merge(w+<span class="number">1</span>,w+win+<span class="number">1</span>,l+<span class="number">1</span>,l+lose+<span class="number">1</span>,st+<span class="number">1</span>,cmp);</span><br><span class="line">	&#125;</span><br><span class="line"><span class="comment">//	for(int i=1;i&lt;=n;i++)</span></span><br><span class="line"><span class="comment">//	&#123;</span></span><br><span class="line"><span class="comment">//		printf("%d %d\n",st[i].a,st[i].s);</span></span><br><span class="line"><span class="comment">//	&#125;</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,st[q].a);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>一些题</category>
      </categories>
      <tags>
        <tag>归并排序</tag>
      </tags>
  </entry>
  <entry>
    <title>洛谷P1464 Function</title>
    <url>/2020/02/11/%E6%B4%9B%E8%B0%B7P1464-Function/</url>
    <content><![CDATA[<p><strong>记忆化搜索</strong><a id="more"></a></p>
<p><img src="https://img-blog.csdnimg.cn/20200208164052853.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE5ODMwNTkx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200208164106864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE5ODMwNTkx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>思路</strong><br>由于循环层数较多，暴力循环肯定超时，这里应采用记忆化搜索。<br><strong>记忆化搜索</strong><br>就是在搜索过程中可能同一组值得结果第一次就算出来了，第二次搜索就不要在去搜索这个以前就算出来的值，下一次搜到已经保存的值可以直接使用不用继续去搜索求值！可以大大减少搜索的深度和此数，这样就可以全部AC<br><strong>AC code</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> s[<span class="number">100</span>][<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll a,b,c;</span><br><span class="line"><span class="function">ll <span class="title">w</span><span class="params">(ll a,ll b,ll c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(a&lt;=<span class="number">0</span>||b&lt;=<span class="number">0</span>||c&lt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(a&gt;<span class="number">20</span>||b&gt;<span class="number">20</span>||c&gt;<span class="number">20</span>) <span class="keyword">return</span> w(<span class="number">20</span>,<span class="number">20</span>,<span class="number">20</span>);</span><br><span class="line">	<span class="keyword">if</span>(!s[a][b][c])</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(a&lt;b&amp;&amp;b&lt;c) s[a][b][c]=w(a,b,c<span class="number">-1</span>)+w(a,b<span class="number">-1</span>,c<span class="number">-1</span>)-w(a,b<span class="number">-1</span>,c);</span><br><span class="line">		<span class="keyword">else</span> s[a][b][c]=w(a<span class="number">-1</span>,b,c)+w(a<span class="number">-1</span>,b<span class="number">-1</span>,c)+w(a<span class="number">-1</span>,b,c<span class="number">-1</span>)-w(a<span class="number">-1</span>,b<span class="number">-1</span>,c<span class="number">-1</span>);</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> s[a][b][c];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">memset</span>(s,<span class="number">0</span>,<span class="keyword">sizeof</span> s);</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">		<span class="keyword">if</span>(a==<span class="number">-1</span>&amp;&amp;b==<span class="number">-1</span>&amp;&amp;c==<span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"w(%lld, %lld, %lld) = %lld\n"</span>, a, b, c, w(a,b,c));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>一些题</category>
      </categories>
      <tags>
        <tag>记忆化搜索</tag>
      </tags>
  </entry>
  <entry>
    <title>洛谷P1149 火柴棒等式</title>
    <url>/2020/02/11/%E6%B4%9B%E8%B0%B7P1149-%E7%81%AB%E6%9F%B4%E6%A3%92%E7%AD%89%E5%BC%8F/</url>
    <content><![CDATA[<p><strong>思维</strong><a id="more"></a></p>
<p><img src="https://img-blog.csdnimg.cn/20200208135607212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE5ODMwNTkx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200208135623263.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzE5ODMwNTkx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>思路</strong><br>由于最多一共24根火柴，单个数字最大不大于1000，相加最大不超过2000。所以第一步先求出0到2000每个数字所要用的火柴数。第二步用两层for循环满足b[i]+b[j]+b[i+j]==n-4，即为所求。<br><strong>AC CODE</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[<span class="number">100</span>],b[<span class="number">10000</span>],ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">	a[<span class="number">0</span>]=<span class="number">6</span>;a[<span class="number">1</span>]=<span class="number">2</span>;a[<span class="number">2</span>]=<span class="number">5</span>;a[<span class="number">3</span>]=<span class="number">5</span>;a[<span class="number">4</span>]=<span class="number">4</span>;</span><br><span class="line">	a[<span class="number">5</span>]=<span class="number">5</span>;a[<span class="number">6</span>]=<span class="number">6</span>;a[<span class="number">7</span>]=<span class="number">3</span>;a[<span class="number">8</span>]=<span class="number">7</span>;a[<span class="number">9</span>]=<span class="number">6</span>;</span><br><span class="line">	b[<span class="number">0</span>]=<span class="number">6</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2000</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> j=i;</span><br><span class="line">		<span class="keyword">while</span>(j)</span><br><span class="line">		&#123;</span><br><span class="line">			b[i]=b[i]+a[j%<span class="number">10</span>];</span><br><span class="line">			j=j/<span class="number">10</span>; </span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1000</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">1000</span>;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(b[i]+b[j]+b[i+j]==n<span class="number">-4</span>) ans++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>一些题</category>
      </categories>
      <tags>
        <tag>思维</tag>
      </tags>
  </entry>
  <entry>
    <title>洛谷p1028 数的计算</title>
    <url>/2020/02/11/%E6%B4%9B%E8%B0%B7p1028-%E6%95%B0%E7%9A%84%E8%AE%A1%E7%AE%97/</url>
    <content><![CDATA[<p><strong>记忆化搜索</strong><a id="more"></a></p>
<p>题目描述<br>我们要求找出具有下列性质数的个数(包含输入的自然数n):</p>
<p>先输入一个自然数n(n≤1000),然后对此自然数按照如下方法进行处理</p>
<p>1 不作任何处理;</p>
<p>2 在它的左边加上一个自然数,但该自然数不能超过原数的一半;</p>
<p>3 加上数后,继续按此规则进行处理,直到不能再加自然数为止.<br>输入<br>6<br>输出<br>6<br>说明/提示<br>满足条件的数为</p>
<p>6，16，26，126，36，136</p>
<p> <strong>AC code</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;//万能头文件</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">1001</span>];<span class="comment">//存每一位数的种类</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123; <span class="comment">//1-n的递推</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i / <span class="number">2</span>; j++) &#123;</span><br><span class="line">			f[i] += f[j]; <span class="comment">//每一位叠加，递推走起</span></span><br><span class="line">		&#125;</span><br><span class="line">		f[i]++; <span class="comment">//加上本身</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; f[n];<span class="comment">//输出n的种类</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>一些题</category>
      </categories>
      <tags>
        <tag>记忆化搜索</tag>
      </tags>
  </entry>
  <entry>
    <title>19年11月17号个人训练赛补题</title>
    <url>/2020/02/11/19%E5%B9%B411%E6%9C%8817%E5%8F%B7%E4%B8%AA%E4%BA%BA%E8%AE%AD%E7%BB%83%E8%B5%9B%E8%A1%A5%E9%A2%98/</url>
    <content><![CDATA[<p><strong>这次的题都是atcoder的上的原题，有几道题我做过，但是还是没能一次过。</strong></p>
<a id="more"></a>
<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p><strong>题意</strong><br>给你n个坐标，让你从中间任选几个，求几个点相加距远点的最远距离。<br><strong>思路</strong><br>先利用极角排序，将他变为一个按角度的有序序列，然后暴力求最远距即可。<br>(偷一波华佬的代码)</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">	ll x,y;</span><br><span class="line">	 </span><br><span class="line">&#125;r[<span class="number">1100</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">atan2</span>(a.y,a.x) &lt; <span class="built_in">atan2</span>(b.y,b.x);</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	ll n,x,y;</span><br><span class="line">	<span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">	<span class="keyword">for</span>(ll i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">		<span class="built_in">cin</span> &gt;&gt; r[i].x &gt;&gt; r[i].y;</span><br><span class="line">	&#125;</span><br><span class="line">	ll ans = <span class="number">0</span>;</span><br><span class="line">	sort(r,r+n,cmp);</span><br><span class="line">	<span class="keyword">for</span>(ll i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">		x = r[i].x ; y = r[i].y;</span><br><span class="line">		ans = max(ans,x*x+y*y);</span><br><span class="line">		<span class="keyword">for</span>(ll j = (i+<span class="number">1</span>)%n; j != i; j = (j+<span class="number">1</span>)%n)&#123;</span><br><span class="line">			x += r[j].x ; y += r[j].y;</span><br><span class="line">			ans = max(ans,x*x+y*y);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">double</span> ans1 = <span class="built_in">sqrt</span>(ans);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%.13lf\n"</span>,ans1);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p><strong>题意</strong><br>从1到n中选k个连续的数 问有多少种选法<br><strong>思路</strong><br>答案为n-k+1</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n-k+<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p><strong>题意</strong><br>序列ai为1到n的有序序列，pi为1到n的任何一个序列，求ai%pi和的最大值<br><strong>思路</strong><br>分别用ai%（ai+1）最后n%1即为最大。为n*（n-1）/2.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,n*(n<span class="number">-1</span>)/<span class="number">2</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p><strong>题意</strong><br>n个顶点，从第一个顶点到其他各个顶点的边数依次为啊ai，求最小能生成几棵不一样的树。<br><strong>思路</strong><br>若第一个数不为0或除除第一个数以外有的为0或给的不是一个连续的序列，都无法生成树。<br>除此以外，ai统计为0 1 2……的数量，对他进行次方相乘。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100000</span>+<span class="number">100</span>];</span><br><span class="line"><span class="function">ll <span class="title">p</span><span class="params">(ll pp,ll qq)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ll ss=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=qq;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		ss=ss*pp%mod;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ss;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> flag=<span class="number">0</span>,x;</span><br><span class="line">	<span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span> a);</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">	a[x]++;</span><br><span class="line">	<span class="keyword">if</span>(x!=<span class="number">0</span>) flag=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">		a[x]++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(a[<span class="number">0</span>]&gt;<span class="number">1</span>) flag=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">int</span> f=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i]==<span class="number">0</span>&amp;&amp;f==<span class="number">0</span>) f=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(a[i]!=<span class="number">0</span>&amp;&amp;f==<span class="number">1</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			flag=<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	ll sum=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(flag)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">			sum=(sum*p(a[i],a[i+<span class="number">1</span>]))%mod;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,sum%mod);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><p><strong>题意</strong><br>n个怪兽，第i个怪兽有ai的血，但血量为p的怪兽攻击血量为q的怪兽时，q变为q-p，为最后剩的那一个血量最少为多少。<br><strong>思路</strong><br>每次让其他的对血量最小的那一个取余，最后剩的那一个即为最小的。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll n;</span><br><span class="line">ll a[<span class="number">100000</span>+<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a&gt;b;</span><br><span class="line"> &#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">	sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">int</span> ss=a[<span class="number">1</span>],minn=ss;</span><br><span class="line">	sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">	<span class="keyword">while</span>(a[<span class="number">2</span>]!=<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		ss=min(ss,minn);</span><br><span class="line">		minn=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i]==<span class="number">0</span>)</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">if</span>(a[i]==ss&amp;&amp;a[i+<span class="number">1</span>]==<span class="number">0</span>)</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">			a[i]=a[i]%ss;</span><br><span class="line">			<span class="keyword">if</span>(minn&gt;a[i]&amp;&amp;a[i]!=<span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				minn=a[i];</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">		sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,a[<span class="number">1</span>]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><p>每次找到最大的那个除2即可。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">priority_queue&lt;ll,<span class="built_in">vector</span>&lt;ll&gt;,less&lt;ll&gt; &gt;q;</span><br><span class="line">ll n,m;</span><br><span class="line">ll a;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">		q.push(a);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(m--)</span><br><span class="line">	&#123;</span><br><span class="line">		a=q.top();</span><br><span class="line">		q.pop();</span><br><span class="line">		a=a/<span class="number">2</span>;</span><br><span class="line">		q.push(a);</span><br><span class="line">	&#125;</span><br><span class="line">	ll sum=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(!q.empty())</span><br><span class="line">	&#123;</span><br><span class="line">		sum=sum+q.top();</span><br><span class="line">		q.pop();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><p>若问题数小于初始分数，则都能幸存。<br>若问题数大于等于初始分数，则给回答正确的那个人加1，最后小于等于q的人不能幸存。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll n,k,q,b;</span><br><span class="line">ll a[<span class="number">100000</span>+<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k&gt;&gt;q;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		a[i]=k;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;b;</span><br><span class="line">		a[b]++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(q&lt;k)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i]-q&lt;=<span class="number">0</span>)</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">		&#125;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p><strong>题意</strong><br>给你一个数字序列，求最长非递增序列的第一个所在位置。<br><strong>思路</strong><br>从后往前依次求每一个数的连续不小于后面数的个数。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll n;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">stt</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	ll a;</span><br><span class="line">	ll b;</span><br><span class="line">&#125;st[<span class="number">100000</span>+<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(stt aa,stt bb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> aa.b&gt;bb.b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;st[i].a;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">	st[n].b=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(st[i].a&gt;=st[i+<span class="number">1</span>].a)</span><br><span class="line">		&#123;</span><br><span class="line">			st[i].b=sum+<span class="number">1</span>;</span><br><span class="line">			sum++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		sum=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	sort(st+<span class="number">1</span>,st+n+<span class="number">1</span>,cmp);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,st[<span class="number">1</span>].b);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><p><strong>题意</strong><br>对一个序列复制k次，一个数后面有n个数比他小，则此数为n，求每一个数的n相加。<br><strong>思路</strong><br>对于同一个序列中，求出num1为每一个数的n相加。对于两个不同序列num2为每一个的n相加，一共有k个num1，k（k-1）个num2。相加即可。<br>数据量过大，用快速乘和long long。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line">ll n,k;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">20000</span>+<span class="number">100</span>];</span><br><span class="line"><span class="function">ll <span class="title">ksc</span><span class="params">(ll a,ll b,ll c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ll ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(b)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(b%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">		ans=(ans+a)%c;</span><br><span class="line">		b=b/<span class="number">2</span>;</span><br><span class="line">		a=(a+a)%c;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">	ll num1=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i]&gt;a[j]) num1++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	ll num2=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[i]&gt;a[j]) num2++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(ksc(num1,k,mod)%mod+ksc(num2,k*(k<span class="number">-1</span>)/<span class="number">2</span>,mod)%mod)%mod);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="M"><a href="#M" class="headerlink" title="M"></a>M</h2><p><strong>题意</strong><br>给你n个字符串，你可以对他随意组合，使其形成一个新的字符串，求里边子串AB的个数。<br><strong>思路</strong><br>能形成AB的无非两种情况，第一个是字符串里边本来就包含AB，第二个是字符串头为B与另一个字符串的尾A组合为AB<br>将开头为B结尾为A的kai、仅开头为B的、仅开头为A的分别统计，先让开头为B结尾为A的自行组合，然后让仅开头为B的和仅开头为A的补上，最后加上字符串之间的AB，即为所求。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll n;</span><br><span class="line"><span class="keyword">int</span> len[<span class="number">10000</span>+<span class="number">100</span>];</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">10000</span>+<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;s[i];</span><br><span class="line">		len[i]=<span class="built_in">strlen</span>(s[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	ll a=<span class="number">0</span>,b=<span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> ss=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(s[i][<span class="number">0</span>]==<span class="string">'B'</span>&amp;&amp;s[i][len[i]<span class="number">-1</span>]==<span class="string">'A'</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			ss++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(s[i][<span class="number">0</span>]==<span class="string">'B'</span>) </span><br><span class="line">		&#123;</span><br><span class="line">			b++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(s[i][len[i]<span class="number">-1</span>]==<span class="string">'A'</span>) </span><br><span class="line">		&#123;</span><br><span class="line">			a++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len[i]<span class="number">-1</span>;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(s[i][j]==<span class="string">'A'</span>&amp;&amp;s[i][j+<span class="number">1</span>]==<span class="string">'B'</span>) sum++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="comment">//	printf("%d %d %d %d\n",ss,sum,a,b);</span></span><br><span class="line">	<span class="keyword">if</span>(ss==<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		sum=sum+min(a,b);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(b&gt;<span class="number">0</span>&amp;&amp;a&gt;<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			sum=sum+ss+<span class="number">1</span>+min(a<span class="number">-1</span>,b<span class="number">-1</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>((a&gt;<span class="number">0</span>&amp;&amp;b==<span class="number">0</span>)||b&gt;<span class="number">0</span>&amp;&amp;a==<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			sum=sum+ss;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(a==<span class="number">0</span>&amp;&amp;b==<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			sum=sum+ss<span class="number">-1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,sum);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>一些题</category>
      </categories>
  </entry>
  <entry>
    <title>19年11月10号个人训练赛补题</title>
    <url>/2020/02/11/19%E5%B9%B411%E6%9C%8810%E5%8F%B7%E4%B8%AA%E4%BA%BA%E8%AE%AD%E7%BB%83%E8%B5%9B%E8%A1%A5%E9%A2%98/</url>
    <content><![CDATA[<p><strong>由于这个周末有事没能参加这次的训练，回学校之后补了几个比较简单的题。</strong></p>
<a id="more"></a>
<h2 id="F"><a href="#F" class="headerlink" title="F"></a><strong>F</strong></h2><p><strong>题意</strong><br>给你一个字符串，依次从中取四个字符（取完之后放回），问取到的四个字符是a，v，i，n，（四个字符无序）的概率是多少，输出一个最简的分数。<br><strong>思路</strong><br>分别求出字符串中a，v，i，n字符出现的次数，并将四个数相乘，与字符串长度求gcd，两个数分别除于gcd，输出即可。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">	<span class="keyword">int</span> aa=<span class="number">0</span>,vv=<span class="number">0</span>,ii=<span class="number">0</span>,nn=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">		<span class="keyword">if</span>(s==<span class="string">'a'</span>) aa++;</span><br><span class="line">		<span class="keyword">if</span>(s==<span class="string">'v'</span>) vv++;</span><br><span class="line">		<span class="keyword">if</span>(s==<span class="string">'i'</span>) ii++;</span><br><span class="line">		<span class="keyword">if</span>(s==<span class="string">'n'</span>) nn++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(aa&amp;&amp;vv&amp;&amp;ii&amp;&amp;nn)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> a=aa*vv*ii*nn;</span><br><span class="line">		<span class="keyword">int</span> b=n*n*n*n;`在这里插入代码片`</span><br><span class="line">		<span class="keyword">int</span> m=__gcd(a,b);</span><br><span class="line">		a=a/m;</span><br><span class="line">		b=b/m;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d/%d\n"</span>,a,b);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"0/1\n"</span>);	</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="G"><a href="#G" class="headerlink" title="G"></a><strong>G</strong></h2><p><strong>题意</strong><br>一个十字路口，有东西和南北方向的车辆，如果同时有车，南北方向的车要等东西方向的车，问南北方向的所有车至少要等多长时间，才能使两个放心不同时有车。<br><strong>思路</strong><br>对东西车辆的时间进行标记，枚举时间。<br><strong>注意</strong><br>由于采用标记法，a数组的范围至少2000.<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">11000</span>],b[<span class="number">11000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span> a);</span><br><span class="line">		<span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span> b);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">cin</span>&gt;&gt;k;</span><br><span class="line">			a[k]=<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> flag=<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(a[b[j]+i]==<span class="number">1</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					flag=<span class="number">0</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(flag)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="I"><a href="#I" class="headerlink" title="I"></a><strong>I</strong></h2><p><strong>题意</strong><br>给你n个数据范围为1e18的小数，对小数点后面的第三位进行四舍五入，输出四舍五入后与之前的差值。<br><strong>思路</strong><br>因为数据范围比较大，用字符串进行存储，对最后一位进行操作即可。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> a,sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">double</span> d=<span class="number">0.5</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">	<span class="keyword">while</span>(n--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">		<span class="keyword">int</span> nn=<span class="built_in">strlen</span>(s)<span class="number">-1</span>;</span><br><span class="line">		<span class="keyword">double</span> m=(s[nn]-<span class="string">'0'</span>);</span><br><span class="line">		<span class="keyword">if</span>(m&lt;<span class="number">5</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			sum=sum-m;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(m&gt;=<span class="number">5</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			sum=sum+(<span class="number">10</span>-m);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%.3f\n"</span>,sum/<span class="number">1000.0</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="J"><a href="#J" class="headerlink" title="J"></a><strong>J</strong></h2><p><strong>题意</strong><br>n个工地，m个工人，每个人在第i个工地上每天得到的工钱为ai，问如何分配工人能使所有的工地一天的支出相等。<br><strong>思路</strong><br>求所有ai的lcm，lcm为每个工地一天的最少支出。根据lcm求出工人数与m对比，并对lcm进行相应的放大。<br><strong>注意</strong><br>数据范围比较大，用long long。<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n,m;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[<span class="number">3100</span>];</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">lcm</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a*b/__gcd(a,b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">long</span> <span class="keyword">long</span> all=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">			all=lcm(all,a[i]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			sum=sum+all/a[i];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(!(m%sum))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">long</span> <span class="keyword">long</span> k=m/sum;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"%lld "</span>,all/a[i]*k);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,all/a[n]*k);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="K"><a href="#K" class="headerlink" title="K"></a>K</h2><p><strong>题意</strong><br>x=a+b y=a-b<br>求 a<em>b<br><strong>思路</strong><br>(a+b)</em>(a-b)/4 即为答案</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">	<span class="keyword">int</span> c=(a+b)/<span class="number">2</span>;</span><br><span class="line">	<span class="keyword">int</span> d=(a-b)/<span class="number">2</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,c*d);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>一些题</category>
      </categories>
  </entry>
  <entry>
    <title>GCD + LCM + 素数打表 + 快速幂</title>
    <url>/2020/02/11/GCD-LCM-%E7%B4%A0%E6%95%B0%E6%89%93%E8%A1%A8-%E5%BF%AB%E9%80%9F%E5%B9%82/</url>
    <content><![CDATA[<p><strong>几个常用的板子</strong></p>
<a id="more"></a>
<p>1<br>gcd为两个数的最大公因数<br>gcd模板</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span> <span class="params">(a , b )</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span>  !b?a:gcd(b,a%b) ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2<br>lcm为两个数的最小公倍数</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">lcm(a,b)=(a*b)/gcd(a,b)</span><br></pre></td></tr></table></figure>
<p>3<br>素数打表</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//求0~100000以内的素数</span></span><br><span class="line">  <span class="comment">//（下标为0的是素数，下标不为0的为合数）</span></span><br><span class="line">  <span class="keyword">bool</span> str[<span class="number">100010</span>];</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">   str[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;<span class="number">100010</span>;i++)</span><br><span class="line">   <span class="keyword">if</span>(!str[i])</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="comment">//可以在这里加数组记录素数 </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=i*<span class="number">2</span>;j&lt;=<span class="number">100010</span>;j=j+i)</span><br><span class="line">    str[i]=<span class="number">1</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span> vis);</span><br><span class="line">vis[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=i*<span class="number">2</span>;j&lt;=n;j=j+i)</span><br><span class="line">	vis[j]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>欧拉筛，求每一个数的欧拉函数的值，结果保存在数组a中。</p>
<p>欧拉函数phi(n)是数论中非常重要的一个函数，其表示1到n-1之间，与n互质的数的个数。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span> a);</span><br><span class="line">a[<span class="number">1</span>]=<span class="number">1</span>;a[<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">2000000</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>(!a[i])</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=<span class="number">2000000</span>;j+=i)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(!a[j]) a[j]=j;</span><br><span class="line">		a[j]=a[j]/i*(i<span class="number">-1</span>);</span><br><span class="line">	&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>4<br>快速幂<br>求 a^b%c</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ksm</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line"> a=a%c;</span><br><span class="line"> <span class="keyword">while</span>(b&gt;<span class="number">0</span>) </span><br><span class="line"> &#123;</span><br><span class="line">  <span class="keyword">if</span>(b%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">  ans=ans*a%c;</span><br><span class="line">  b=b/<span class="number">2</span>;</span><br><span class="line">  a=(a*a)%c;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>模板</category>
      </categories>
  </entry>
</search>
